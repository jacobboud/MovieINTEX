// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieINTEX.Data;

#nullable disable

namespace MovieINTEX.Migrations.MovieDb
{
    [DbContext(typeof(MovieDbContext))]
    partial class MovieDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.14");

            modelBuilder.Entity("MovieINTEX.Data.MovieRating", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("movies_ratings");
                });

            modelBuilder.Entity("MovieINTEX.Data.Movie_Titles", b =>
                {
                    b.Property<string>("show_id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Action")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ActionTV")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TV Action");

                    b.Property<bool>("Adventure")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AnimeSeries")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Anime Series International TV Shows");

                    b.Property<bool>("BritishSeries")
                        .HasColumnType("INTEGER")
                        .HasColumnName("British TV Shows Docuseries International TV Shows");

                    b.Property<bool>("Children")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Comedies")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ComedyTV")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TV Comedies");

                    b.Property<bool>("CrimeTVShowsDocuseries")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Crime TV Shows Docuseries");

                    b.Property<bool>("Documentaries")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Docuseries")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DramaTV")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TV Dramas");

                    b.Property<bool>("Dramas")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Family")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Family Movies");

                    b.Property<bool>("Fantasy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Horror")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Horror Movies");

                    b.Property<bool>("InternationalComedies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Comedies International Movies");

                    b.Property<bool>("InternationalComedyDramas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Comedies Dramas International Movies");

                    b.Property<bool>("InternationalDocumentaries")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Documentaries International Movies");

                    b.Property<bool>("InternationalDramas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Dramas International Movies");

                    b.Property<bool>("InternationalTVRomanticDramas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("International TV Shows Romantic TV Shows TV Dramas");

                    b.Property<bool>("InternationalThrillers")
                        .HasColumnType("INTEGER")
                        .HasColumnName("International Movies Thrillers");

                    b.Property<bool>("Kids")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Kids' TV");

                    b.Property<bool>("Language")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Language TV Shows");

                    b.Property<bool>("Musicals")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NatureTV")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Nature TV");

                    b.Property<bool>("RealityTV")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Reality TV");

                    b.Property<bool>("RomanticComedies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Comedies Romantic Movies");

                    b.Property<bool>("RomanticDramas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Dramas Romantic Movies");

                    b.Property<bool>("Spirituality")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TalkShowTVComedies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Talk Shows TV Comedies");

                    b.Property<bool>("Thrillers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("cast")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("duration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("release_year")
                        .HasColumnType("INTEGER");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("show_id");

                    b.ToTable("movies_titles");
                });

            modelBuilder.Entity("MovieINTEX.Data.Movie_Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AmazonPrime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AppleTVPlus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("DisneyPlus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Hulu")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Netflix")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ParamountPlus")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Peacock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("movies_users");
                });
#pragma warning restore 612, 618
        }
    }
}
